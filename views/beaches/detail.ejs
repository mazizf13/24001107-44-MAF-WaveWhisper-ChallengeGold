<% layout("layouts/app") %>
<link rel="stylesheet" href="/css/stars.css" />

<div class="row">
  <div class="col-6">
    <div class="card">
      <div id="carouselExample" class="carousel slide">
        <div class="carousel-inner">
          <% beach.images.forEach((image, index) => {%>
          <div class="carousel-item <%= index === 0 ? 'active' : '' %>">
            <img
              src="/images/<%= image.filename %>"
              class="d-block w-100"
              alt="<%= beach.title %>"
            />
          </div>
          <% }) %>
        </div>
        <% if(beach.images.length > 1) { %>
        <button
          class="carousel-control-prev"
          type="button"
          data-bs-target="#carouselExample"
          data-bs-slide="prev"
        >
          <span class="carousel-control-prev-icon" aria-hidden="true"></span>
          <span class="visually-hidden">Previous</span>
        </button>
        <button
          class="carousel-control-next"
          type="button"
          data-bs-target="#carouselExample"
          data-bs-slide="next"
        >
          <span class="carousel-control-next-icon" aria-hidden="true"></span>
          <span class="visually-hidden">Next</span>
        </button>
        <% } %>
      </div>

      <div class="card-body">
        <h5 class="card-title"><%= beach.title %></h5>
        <p class="card-text"><%= beach.description %></p>
      </div>
      <ul class="list-group list-group-flush">
        <li class="list-group-item"><%= beach.location %></li>
        <li class="list-group-item">Author: <%= beach.author.username %></li>
        <li class="list-group-item"><%= beach.cost %></li>
      </ul>
      <% if(currentUser && beach.author.equals(currentUser._id)) { %>
      <div class="card-body">
        <a
          href="/beaches/<%= beach._id %>/update"
          class="btn btn-warning card-link text-white"
          >Edit</a
        >
        <form
          action="/beaches/<%= beach._id %>?_method=DELETE"
          method="POST"
          style="display: inline !important"
        >
          <button
            class="btn btn-danger"
            onclick="return confirm('Are you sure you want to delete?')"
          >
            Delete
          </button>
        </form>
      </div>
      <% } %>
    </div>
  </div>
  <div class="col-6">
    <div
      style="width: 640px; height: 480px; margin-bottom: 5%"
      id="mapContainer"
    ></div>
    <% if(currentUser) { %>
    <h3>Leave a Review</h3>
    <form
      action="/beaches/<%= beach._id %>/reviews"
      method="POST"
      class="needs-validation mb-3"
      novalidate
    >
      <div class="mb-3">
        <label for="rating">Rating</label>
        <fieldset class="starability-basic">
          <input
            type="radio"
            id="no-rate"
            class="input-no-rate"
            name="review[rating]"
            value="1"
            checked
            aria-label="No rating."
          />
          <input
            type="radio"
            id="first-rate1"
            name="review[rating]"
            value="1"
          />
          <label for="first-rate1" title="Terrible">1 star</label>
          <input
            type="radio"
            id="first-rate2"
            name="review[rating]"
            value="2"
          />
          <label for="first-rate2" title="Not good">2 stars</label>
          <input
            type="radio"
            id="first-rate3"
            name="review[rating]"
            value="3"
          />
          <label for="first-rate3" title="Average">3 stars</label>
          <input
            type="radio"
            id="first-rate4"
            name="review[rating]"
            value="4"
          />
          <label for="first-rate4" title="Very good">4 stars</label>
          <input
            type="radio"
            id="first-rate5"
            name="review[rating]"
            value="5"
          />
          <label for="first-rate5" title="Amazing">5 stars</label>
        </fieldset>
      </div>
      <div class="mb-3">
        <label for="review">Review</label>
        <textarea
          name="review[body]"
          id="body"
          cols="40"
          rows="5"
          class="form-control"
          placeholder="Your review ..."
          required
        ></textarea>
        <div class="valid-feedback">Looks good!</div>
        <div class="invalid-feedback">Please fill the blank.</div>
      </div>
      <button type="submit" class="btn btn-success">Send</button>
    </form>

    <% } %> <% for(const review of beach.reviews) { %>
    <div class="card mb-3">
      <div class="card-body">
        <p class="starability-result" data-rating="<%= review.rating %>">
          Rated: 3 stars
        </p>
        <p class="card-text"><%= review.body %></p>
        <% if(currentUser && review.author.equals(currentUser._id)) { %>
        <form
          action="/beaches/<%= beach._id %>/reviews/<%= review._id %>?_method=DELETE"
          method="POST"
          style="display: inline !important"
          onsubmit="return confirm('Are you sure you want to delete?')"
        >
          <button type="submit" class="btn btn-danger btn-sm">Delete</button>
        </form>
        <% } %>
      </div>
    </div>
    <% } %>
  </div>
</div>

<script>
  const beach = <%- JSON.stringify(beach) %>;
  const beachLocation = {lng: beach.geojson.coordinates[0], lat: beach.geojson.coordinates[1]};
</script>

<script>
  // Initialize the platform object
  const platform = new H.service.Platform({
    apikey: "YdTEzRRe60yEV6rCRxyOoBpyn_rPqSXa_RgD4YrqoK0",
  });

  // Obtain the default map types from the platform object
  const defaultLayers = platform.createDefaultLayers();

  // Instantiate (and display) the map
  const map = new H.Map(
    document.getElementById("mapContainer"),
    defaultLayers.vector.normal.map,
    {
      zoom: 10,
      center: beachLocation,
    }
  );

  const svgMarkup = `<svg width="50px" height="50px" viewBox="0 0 24 24" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns="http://www.w3.org/2000/svg" version="1.1" xmlns:cc="http://creativecommons.org/ns#" xmlns:dc="http://purl.org/dc/elements/1.1/">
            <g transform="translate(0 -1028.4)">
             <path d="m12 0c-4.4183 2.3685e-15 -8 3.5817-8 8 0 1.421 0.3816 2.75 1.0312 3.906 0.1079 0.192 0.221 0.381 0.3438 0.563l6.625 11.531 6.625-11.531c0.102-0.151 0.19-0.311 0.281-0.469l0.063-0.094c0.649-1.156 1.031-2.485 1.031-3.906 0-4.4183-3.582-8-8-8zm0 4c2.209 0 4 1.7909 4 4 0 2.209-1.791 4-4 4-2.2091 0-4-1.791-4-4 0-2.2091 1.7909-4 4-4z" transform="translate(0 1028.4)" fill="#e74c3c"/>
             <path d="m12 3c-2.7614 0-5 2.2386-5 5 0 2.761 2.2386 5 5 5 2.761 0 5-2.239 5-5 0-2.7614-2.239-5-5-5zm0 2c1.657 0 3 1.3431 3 3s-1.343 3-3 3-3-1.3431-3-3 1.343-3 3-3z" transform="translate(0 1028.4)" fill="#c0392b"/>
            </g>
           </svg>`;

  const icon = new H.map.Icon(svgMarkup);
  const marker = new H.map.Marker(beachLocation, { icon });

  map.addObject(marker);
  map.setCenter(beachLocation);

  const ui = H.ui.UI.createDefault(map, defaultLayers, "en-US");
  const behavior = new H.mapevents.Behavior(new H.mapevents.MapEvents(map));
</script>
